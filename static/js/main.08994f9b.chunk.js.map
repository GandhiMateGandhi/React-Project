{"version":3,"sources":["api/api.js","redux/authReducer.js","redux/appReducer.js","redux/reduxStore.js","components/Main/Main.jsx","components/Sidebar/SideItem/SideItem.jsx","components/Sidebar/Sidebar.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Login/Login.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","hoc/withSuspense.js","App.js","index.js","components/common/Validator/Validator.jsx","components/common/Loader/Loader.jsx","redux/profileReducer.js","redux/messagesReducer.js","redux/usersReducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageUsersCount","get","unfollow","userId","delete","follow","post","profileAPI","getProfile","getProfileStatus","updateProfileStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","SET_USER_DATA","initialState","id","isAuth","setAuthUserData","type","payload","authLogout","dispatch","a","data","resultCode","authReducer","state","action","INITIALIZED","initialized","appReducer","store","createStore","require","combineReducers","profilePage","profileReducer","messagesPage","messagesReducer","usersPage","usersReducer","auth","app","form","formReducer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunkMiddleware","Main","className","SideItem","item","to","Sidebar","News","props","Settings","maxLength25","maxLength","minLength2","minLength","LoginReduxForm","reduxForm","onSubmit","handleSubmit","Field","component","inputField","validate","required","name","label","htmlFor","error","connect","authLogin","response","errorMessage","messages","length","stopSubmit","_error","formData","Header","src","onClick","HeaderContainer","this","React","withSuspense","Component","fallback","Loader","UsersContainer","ProfileContainer","MessagesContainer","App","initializeApp","path","render","promise","Promise","all","then","ReactDOM","StrictMode","document","getElementById","value","undefined","max","min","textareaField","input","meta","touched","warning","placeholder","ADD_POST","SET_USER_PROFILE","SET_USER_PROFILE_STATUS","postsData","text","likesCount","userProfile","userProfileStatus","addPost","newPostText","setUserProfileStatus","getUserProfile","getUserProfileStatus","updateUserProfileStatus","SEND_MESSAGE","usersData","messagesData","sendMessageActionCreator","newMessageBody","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","usersCountPerPage","totalUsersCount","isFetching","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","requestUsers","items","totalUsers","totalCount","map","user","followed"],"mappings":"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","file":"static/js/main.08994f9b.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"70c3d7bd-2946-4984-86de-f95d71c9a231\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageUsersCount = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageUsersCount}`)\r\n        //     .then(response => {\r\n        //     return response.data\r\n        // })\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/` + userId)\r\n            // .then(response => {\r\n            //     return response.data\r\n            // })\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/` + userId)\r\n            // .then(response => {\r\n            //     return response.data\r\n            // })\r\n    },\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getProfileStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateProfileStatus(status) {\r\n        return instance.put(`profile/status/`, { status: status })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe })\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n        email: null,\r\n        id: null,\r\n        login: null,\r\n        isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = ( id, email, login, isAuth ) => ({ type: SET_USER_DATA, payload: { id, email, login, isAuth } });\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n           let response = await authAPI.me();\r\n                if (response.data.resultCode === 0) {\r\n                    let { id, login, email } = response.data.data\r\n                    dispatch(setAuthUserData(id, email, login, true));\r\n                }\r\n    }\r\n\r\nexport const authLogin = (email, password, rememberMe) => async (dispatch) => {\r\n      let response = await authAPI.login(email, password, rememberMe);\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setAuthUserData());\r\n                } else {\r\n                    let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : \"Login data is incorrect\"\r\n                    dispatch(stopSubmit(\"login\"), { _error: errorMessage })\r\n                }\r\n    }\r\n\r\nexport const authLogout = () => async (dispatch) => {\r\n        let response = await authAPI.logout()\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setAuthUserData(null, null, null, false));\r\n                }\r\n    }\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIALIZED = 'INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializationComplete = () => ({ type: INITIALIZED });\r\n\r\nexport const initializeApp = () =>\r\n    (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializationComplete())\r\n            });\r\n\r\n    }\r\n\r\nexport default appReducer;","import { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {applyMiddleware, combineReducers, compose} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport appReducer from \"./appReducer\";\r\nconst {createStore} = require(\"redux\");\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import './Main.scss'\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div className=\"Main\">\r\n        <h1>Main content</h1>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import './SideItem.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst SideItem = ( {item} ) => {\r\n    return (\r\n        <div className=\"SideItem\">\r\n            <NavLink to={item}>{item}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideItem;","import NavItem from './SideItem/SideItem'\r\nimport './Sidebar.scss'\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <nav className=\"Sidebar\">\r\n            <NavItem item=\"Profile\" />\r\n            <NavItem item=\"Messages\" />\r\n            <NavItem item=\"Main\" />\r\n            <NavItem item=\"Users\" />\r\n            <NavItem item=\"News\" />\r\n            <NavItem item=\"Settings\" />\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import './News.scss'\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div className=\"News\">\r\n            <h1>News content</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import './Settings.scss'\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div className=\"Settings\">\r\n            <h1>Settings content</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import './Login.scss';\r\nimport React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from \"react-redux\";\r\nimport {authLogin, authLogout} from \"../../redux/authReducer\";\r\nimport {inputField, maxLength, minLength, required} from \"../common/Validator/Validator\";\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst maxLength25 = maxLength(25);\r\nconst minLength2 = minLength(2);\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form className=\"LoginForm\" onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={inputField}\r\n                       validate={[required, maxLength25, minLength2]}\r\n                       name=\"email\"\r\n                       label=\"Email\"\r\n                       type=\"text\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field component={inputField}\r\n                       validate={[required, maxLength25, minLength2]}\r\n                       name=\"password\"\r\n                       label=\"Password\"\r\n                       type=\"password\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field component={inputField}\r\n                       name=\"rememberMe\"\r\n                       label=\"Remember me\"\r\n                       type=\"checkbox\"\r\n                />\r\n                <label htmlFor=\"rememberMe\">Remember me</label>\r\n            </div>\r\n            <div>\r\n                <span>{props.error}</span>\r\n                {props.error && <span>{props.error}</span>}\r\n                <button type=\"submit\">Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.authLogin(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/Profile\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { authLogin, authLogout })(Login);","import './Header.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"Header\">\r\n            <img src=\"https://i.pinimg.com/originals/a2/9a/b3/a29ab34a61c2f5504cad588f169cd4f3.png\"/>\r\n            <div className=\"HeaderLogin\">\r\n                {\r\n                    props.isAuth ?\r\n                        <div className=\"HeaderLogout\">\r\n                            <NavLink to={'/Profile'}>{props.login}</NavLink>\r\n                            <button onClick={props.authLogout}>Log out</button>\r\n                        </div> :\r\n                        <NavLink to={'/Login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import * as React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authLogout} from \"../../redux/authReducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { authLogout })(HeaderContainer);","import React, { Suspense } from \"react\";\r\nimport Loader from \"../components/common/Loader/Loader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Loader />} >\r\n            <Component {...props} />\r\n        </Suspense>\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport './Wrapper.scss'\r\nimport './App.css'\r\nimport Main from './components/Main/Main';\r\nimport Sidebar from './components/Sidebar/Sidebar';\r\nimport News from \"./components/News/News\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {Route} from \"react-router-dom\"\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Loader from \"./components/common/Loader/Loader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\r\nconst MessagesContainer = React.lazy(() => import (\"./components/Messages/MessagesContainer\"));\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Loader />\r\n        }\r\n        return (\r\n            <div className=\"Wrapper\">\r\n                <HeaderContainer/>\r\n                <Sidebar/>\r\n                <div className=\"Content\">\r\n                    <Route path='/Main' render={() => <Main/>}/>\r\n                    <Route path='/Messages' render={withSuspense(MessagesContainer)}/>\r\n                    <Route path='/News' render={() => <News/>}/>\r\n                    <Route path='/Users' render={withSuspense(UsersContainer)}/>\r\n                    <Route path='/Settings' render={() => <Settings/>}/>\r\n                    <Route path='/Login' render={() => <Login/>}/>\r\n                    <Route path='/Profile/:userId?' render={withSuspense(ProfileContainer)}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n}\r\n)\r\nexport default connect(mapStateToProps, { initializeApp })(App);\r\n","import './index.css';\r\nimport store from \"./redux/reduxStore\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n                <Provider store={store}>\r\n                    <App />\r\n                </Provider>\r\n            </BrowserRouter>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n","import React from 'react'\r\nimport './Validator.scss'\r\n\r\nexport const required = value => (value ? undefined : 'Required');\r\nexport const maxLength = max => value =>\r\n    value && value.length > max ? `Must be maximum ${max} characters` : undefined;\r\nexport const minLength = min => value =>\r\n    value && value.length < min ? `Must me minimum ${min} characters` : undefined;\r\n\r\nexport const textareaField = ({\r\n                                  input,\r\n                                  label,\r\n                                  type,\r\n                                  meta: { touched, error, warning }\r\n                              }) => (\r\n    <div className=\"TextArea\">\r\n        <textarea {...input} placeholder={label} type={type}/>\r\n        {touched &&\r\n        ((error && <span>{error}</span>) ||\r\n            (warning && <span>{warning}</span>))}\r\n    </div>\r\n)\r\n\r\nexport const inputField = ({\r\n                               input,\r\n                               label,\r\n                               type,\r\n                               meta: { touched, error, warning }\r\n                           }) => (\r\n    <div className=\"Input\">\r\n        <input {...input} placeholder={label} type={type}/>\r\n        {touched &&\r\n        ((error && <span>{error}</span>) ||\r\n            (warning && <span>{warning}</span>))}\r\n    </div>\r\n)\r\n\r\n","import './Loader.scss';\r\n\r\nlet Loader = () => {\r\n    return (\r\n        <div className=\"lds-ellipsis\">\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_PROFILE_STATUS = 'SET_USER_PROFILE_STATUS';\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {id: 1, text: 'How\\'re you?', likesCount: 3},\r\n        {id: 2, text: 'Let\\'s do party tonight!', likesCount: 1},\r\n        {id: 3, text: '*post*', likesCount: 13},\r\n        {id: 4, text: 'Hello sweety!', likesCount: 6},\r\n        {id: 5, text: '*picture*', likesCount: 22}\r\n    ],\r\n    userProfile: null,\r\n    userProfileStatus: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, { id: 6, text: action.newPostText, likesCount: 0 }],\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {...state, userProfile: action.userProfile}\r\n        }\r\n\r\n        case SET_USER_PROFILE_STATUS: {\r\n            return {...state, userProfileStatus: action.status}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (userProfile) => ({type: SET_USER_PROFILE, userProfile})\r\nexport const setUserProfileStatus = (status) => ({type: SET_USER_PROFILE_STATUS, status})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n        let response = await profileAPI.getProfile(userId)\r\n                dispatch(setUserProfile(response.data));\r\n    }\r\n\r\nexport const getUserProfileStatus = (userId) => async (dispatch) => {\r\n       let response = await profileAPI.getProfileStatus(userId)\r\n                dispatch(setUserProfileStatus(response.data));\r\n    }\r\n\r\nexport const updateUserProfileStatus = (status) => async (dispatch) => {\r\n       let response = await profileAPI.updateProfileStatus(status)\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setUserProfileStatus(status));\r\n                }\r\n    }\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    usersData: [\r\n        {id: 1, name: 'Kamilla'},\r\n        {id: 2, name: 'Vildan'},\r\n        {id: 3, name: 'Rustem'},\r\n        {id: 4, name: 'Elvira'},\r\n        {id: 5, name: 'Cafe'}\r\n    ],\r\n    messagesData: [\r\n        {id: 1, text: 'How\\'re you'},\r\n        {id: 2, text: 'Let\\'s do party tonight!'},\r\n        {id: 3, text: '*post*'},\r\n        {id: 4, text: 'Hello sweety!'},\r\n        {id: 5, text: '*picture*'}\r\n    ]\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, text: action.newMessageBody}],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageActionCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default messagesReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    usersCountPerPage: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n};\r\n\r\nlet usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsers}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsers) => ({type: SET_TOTAL_USERS_COUNT, totalUsers});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport const requestUsers = (currentPage, pageUsersCount) => async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let response = await usersAPI.getUsers(currentPage, pageUsersCount)\r\n                dispatch(toggleIsFetching(false));\r\n                dispatch(setUsers(response.data.items));\r\n                dispatch(setTotalUsersCount(response.data.totalCount));\r\n    }\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n        let response = await usersAPI.follow(userId)\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n    }\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n        let response = await usersAPI.unfollow(userId)\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId))\r\n                }\r\n    }\r\n\r\n\r\n\r\nexport default usersReducer;"],"sourceRoot":""}