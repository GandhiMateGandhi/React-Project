{"version":3,"sources":["api/api.js","components/common/Validator/Validator.jsx","redux/authReducer.js","redux/appReducer.js","redux/reduxStore.js","components/Main/Main.jsx","components/Sidebar/SideItem/SideItem.jsx","components/Sidebar/Sidebar.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Login/Login.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","hoc/withSuspense.js","App.js","index.js","components/common/Loader/Loader.jsx","redux/profileReducer.js","redux/messagesReducer.js","redux/usersReducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageUsersCount","get","follow","userId","post","unfollow","delete","profileAPI","getProfile","getProfileStatus","updateProfileStatus","status","put","saveProfilePhoto","profilePhoto","formData","FormData","append","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","required","value","undefined","maxLength","max","length","minLength","min","textareaField","input","label","type","meta","touched","error","warning","className","placeholder","inputField","SET_USER_DATA","SET_CAPTCHA_URL","initialState","id","isAuth","captchaUrl","setAuthUserData","payload","setCaptchaUrl","getAuthUserData","dispatch","a","response","data","resultCode","authLogout","url","authReducer","state","action","INITIALIZED","initialized","appReducer","store","createStore","require","combineReducers","profilePage","profileReducer","messagesPage","messagesReducer","usersPage","usersReducer","auth","app","form","formReducer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunkMiddleware","Main","SideItem","item","to","Sidebar","News","props","Settings","maxLength25","minLength2","LoginReduxForm","reduxForm","handleSubmit","pristine","submitting","onSubmit","Field","component","validate","name","htmlFor","src","alt","disabled","connect","authLogin","errorMessage","messages","stopSubmit","_error","Header","onClick","HeaderContainer","this","React","withSuspense","Component","fallback","Loader","UsersContainer","ProfileContainer","MessagesContainer","App","initializeApp","path","render","from","promise","Promise","all","then","ReactDOM","StrictMode","document","getElementById","ADD_POST","SET_USER_PROFILE","SET_USER_PROFILE_STATUS","SET_PROFILE_PHOTO","postsData","text","likesCount","userProfile","userProfileStatus","addPost","newPostText","setUserProfileStatus","saveProfilePhotoSuccess","photos","getUserProfile","getUserProfileStatus","updateUserProfileStatus","console","log","SEND_MESSAGE","usersData","messagesData","sendMessageActionCreator","newMessageBody","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","usersCountPerPage","totalUsersCount","isFetching","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","requestUsers","items","totalUsers","totalCount","map","user","followed"],"mappings":"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","file":"static/js/main.2a55b040.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"22f29d98-87b4-4898-a75f-c433c157801d\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageUsersCount = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageUsersCount}`)\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/` + userId)\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/` + userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getProfileStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateProfileStatus(status) {\r\n        return instance.put(`profile/status/`, { status })\r\n    },\r\n    saveProfilePhoto(profilePhoto) {\r\n        const formData = new FormData();\r\n        formData.append('image', profilePhoto)\r\n        return instance.put(`profile/photo`, formData)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n\r\n    login(email, password, rememberMe = false, captcha) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha })\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl () {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport './Validator.scss'\r\n\r\nexport const required = value => (value ? undefined : 'Required');\r\nexport const maxLength = max => value =>\r\n    value && value.length > max ? `Must be maximum ${max} characters` : undefined;\r\nexport const minLength = min => value =>\r\n    value && value.length < min ? `Must me minimum ${min} characters` : undefined;\r\n\r\nexport const textareaField = ({\r\n                                  input,\r\n                                  label,\r\n                                  type,\r\n                                  meta: { touched, error, warning }\r\n                              }) => (\r\n    <div className=\"Error Error_textarea\">\r\n        <textarea {...input} placeholder={label} type={type}/>\r\n        {touched &&\r\n        ((error && <span>{error}</span>) ||\r\n            (warning && <span>{warning}</span>))}\r\n    </div>\r\n)\r\n\r\nexport const inputField = ({\r\n                               input,\r\n                               label,\r\n                               type,\r\n                               meta: { touched, error, warning }\r\n                           }) => (\r\n    <div className=\"Error Error_input\">\r\n        <input {...input} placeholder={label} type={type}/>\r\n        {touched &&\r\n        ((error && <span>{error}</span>) ||\r\n            (warning && <span>{warning}</span>))}\r\n    </div>\r\n)\r\n\r\n","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_CAPTCHA_URL = 'SET_CAPTCHA_URL'\r\n\r\n\r\nlet initialState = {\r\n    email: null,\r\n    id: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case SET_CAPTCHA_URL: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: { id, email, login, isAuth }\r\n});\r\n\r\nexport const setCaptchaUrl = (captchaUrl) => ({ type: SET_CAPTCHA_URL, payload: { captchaUrl } });\r\n\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, login, email } = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const authLogin = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : \"Incorrect login data\";\r\n        dispatch(stopSubmit(\"login\", { _error: errorMessage }))\r\n    }\r\n}\r\n\r\nexport const authLogout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    let response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url;\r\n        dispatch(setCaptchaUrl(captchaUrl));\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIALIZED = 'INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializationComplete = () => ({ type: INITIALIZED });\r\n\r\nexport const initializeApp = () =>\r\n    (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializationComplete())\r\n            });\r\n\r\n    }\r\n\r\nexport default appReducer;","import { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {applyMiddleware, combineReducers, compose} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport appReducer from \"./appReducer\";\r\nconst {createStore} = require(\"redux\");\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import './Main.scss'\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div className=\"Main\">\r\n        <h1>Main content</h1>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import './SideItem.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst SideItem = ( {item} ) => {\r\n    return (\r\n        <div className=\"SideItem\">\r\n            <NavLink to={item}>{item}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideItem;","import NavItem from './SideItem/SideItem'\r\nimport './Sidebar.scss'\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <nav className=\"Sidebar\">\r\n            <NavItem item=\"Profile\" />\r\n            <NavItem item=\"Messages\" />\r\n            <NavItem item=\"Main\" />\r\n            <NavItem item=\"Users\" />\r\n            <NavItem item=\"News\" />\r\n            <NavItem item=\"Settings\" />\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import './News.scss'\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div className=\"News\">\r\n            <h1>News content</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import './Settings.scss'\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div className=\"Settings\">\r\n            <h1>Settings content</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import './Login.scss';\r\nimport '../common/Validator/Validator.scss'\r\nimport React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from \"react-redux\";\r\nimport {authLogin, authLogout, getCaptchaUrl} from \"../../redux/authReducer\";\r\nimport {inputField, maxLength, minLength, required} from \"../common/Validator/Validator\";\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst maxLength25 = maxLength(25);\r\nconst minLength2 = minLength(2);\r\n\r\nconst LoginForm = (props) => {\r\n    const { handleSubmit, pristine, submitting, captchaUrl } = props;\r\n    return (\r\n        <form className=\"LoginForm\" onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field component={inputField}\r\n                       validate={[required, maxLength25, minLength2]}\r\n                       name=\"email\"\r\n                       label=\"Email\"\r\n                       type=\"text\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field component={inputField}\r\n                       validate={[required, maxLength25, minLength2]}\r\n                       name=\"password\"\r\n                       label=\"Password\"\r\n                       type=\"password\"\r\n                />\r\n            </div>\r\n            <div className=\"RememberMeForm\">\r\n                <Field component={inputField}\r\n                       name=\"rememberMe\"\r\n                       label=\"Remember me\"\r\n                       type=\"checkbox\"\r\n                />\r\n                <label htmlFor=\"rememberMe\">Remember me</label>\r\n            </div>\r\n            {captchaUrl && <img src={captchaUrl} alt=\"Captcha\"/>}\r\n            {captchaUrl &&\r\n            <div>\r\n                <Field component={inputField}\r\n                       validate={[required, maxLength25, minLength2]}\r\n                       name=\"captcha\"\r\n                       label=\"Captcha\"\r\n                       type=\"text\"\r\n                />\r\n            </div>}\r\n            <div className=\"Error Error_input\">\r\n                <button type=\"submit\" disabled={pristine || submitting}>Login</button>\r\n                {props.error && <span>{props.error}</span>}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.authLogin(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/Profile\"/>\r\n    }\r\n    return (\r\n        <div className=\"Login\">\r\n            <h1>Login</h1>\r\n            <LoginReduxForm captchaUrl={props.captchaUrl} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { authLogin, authLogout, getCaptchaUrl })(Login);","import './Header.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"Header\">\r\n            <div className=\"HeaderLogin\">\r\n                {props.isAuth ?\r\n                    <div className=\"HeaderLogout\">\r\n                        <NavLink to={'/Profile'}>{props.login}</NavLink>\r\n                        <button onClick={props.authLogout}>Log out</button>\r\n                    </div> :\r\n                    <NavLink to={'/Login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import * as React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authLogout} from \"../../redux/authReducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { authLogout })(HeaderContainer);","import React, { Suspense } from \"react\";\r\nimport Loader from \"../components/common/Loader/Loader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Loader />} >\r\n            <Component {...props} />\r\n        </Suspense>\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {Component} from \"react\";\r\nimport './Wrapper.scss'\r\nimport './App.css'\r\nimport Main from './components/Main/Main';\r\nimport Sidebar from './components/Sidebar/Sidebar';\r\nimport News from \"./components/News/News\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {Route, Switch} from \"react-router-dom\"\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Loader from \"./components/common/Loader/Loader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\r\nconst MessagesContainer = React.lazy(() => import (\"./components/Messages/MessagesContainer\"));\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Loader/>\r\n        }\r\n        return (\r\n            <div className=\"Wrapper\">\r\n                <HeaderContainer/>\r\n                <Sidebar/>\r\n                <div className=\"Content\">\r\n                    <Switch>\r\n                        <Route path='/Profile/:userId?' render={withSuspense(ProfileContainer)}/>\r\n                        <Route path='/Main' render={() => <Main/>}/>\r\n                        <Route path='/Messages' render={withSuspense(MessagesContainer)}/>\r\n                        <Route path='/News' render={() => <News/>}/>\r\n                        <Route path='/Users' render={withSuspense(UsersContainer)}/>\r\n                        <Route path='/Settings' render={() => <Settings/>}/>\r\n                        <Route path='/Login' render={() => <Login/>}/>\r\n                        {/*<Redirect from=\"/\" to=\"/Profile\" />*/}\r\n                        <Route render={() => <Redirect from=\"/\" to=\"/Profile\" />}/>\r\n                    </Switch>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n        initialized: state.app.initialized\r\n    }\r\n)\r\nexport default connect(mapStateToProps, { initializeApp })(App);\r\n","import './index.css';\r\nimport store from \"./redux/reduxStore\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                    <App />\r\n                </Provider>\r\n            </HashRouter>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n","import './Loader.scss';\r\n\r\nlet Loader = () => {\r\n    return (\r\n        <div className=\"lds-ellipsis\">\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_PROFILE_STATUS = 'SET_USER_PROFILE_STATUS';\r\nconst SET_PROFILE_PHOTO = 'SET_PROFILE_PHOTO';\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        { id: 1, text: 'How\\'re you?', likesCount: 3 },\r\n        { id: 2, text: 'Let\\'s do party tonight!', likesCount: 1 },\r\n        { id: 3, text: '*post*', likesCount: 13 },\r\n        { id: 4, text: 'Hello sweety!', likesCount: 6 },\r\n        { id: 5, text: '*picture*', likesCount: 22 }\r\n    ],\r\n    userProfile: null,\r\n    userProfileStatus: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                postsData: [{ id: null, text: action.newPostText, likesCount: 0 }, ...state.postsData],\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, userProfile: action.userProfile }\r\n        }\r\n\r\n        case SET_USER_PROFILE_STATUS: {\r\n            return { ...state, userProfileStatus: action.status }\r\n        }\r\n\r\n        case SET_PROFILE_PHOTO: {\r\n            return { ...state, userProfile: { ...state.userProfile, photos: action.photos } }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostText) => ({ type: ADD_POST, newPostText });\r\nexport const setUserProfile = (userProfile) => ({ type: SET_USER_PROFILE, userProfile })\r\nexport const setUserProfileStatus = (status) => ({ type: SET_USER_PROFILE_STATUS, status })\r\nexport const saveProfilePhotoSuccess = (photos) => ({ type: SET_PROFILE_PHOTO, photos })\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getUserProfileStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfileStatus(userId)\r\n    dispatch(setUserProfileStatus(response.data));\r\n}\r\n\r\nexport const updateUserProfileStatus = (status) => async (dispatch) => {\r\n        let response = await profileAPI.updateProfileStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserProfileStatus(status));\r\n        } else {\r\n            console.log(`Error: ${response.data.messages[0]}`)\r\n        }\r\n\r\n}\r\n\r\nexport const saveProfilePhoto = (photos) => async (dispatch) => {\r\n    let response = await profileAPI.saveProfilePhoto(photos)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(saveProfilePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    usersData: [\r\n        {id: 1, name: 'Kamilla'},\r\n        {id: 2, name: 'Vildan'},\r\n        {id: 3, name: 'Rustem'},\r\n        {id: 4, name: 'Elvira'},\r\n        {id: 5, name: 'Cafe'}\r\n    ],\r\n    messagesData: [\r\n        {id: 1, text: 'How\\'re you'},\r\n        {id: 2, text: 'Let\\'s do party tonight!'},\r\n        {id: 3, text: '*post*'},\r\n        {id: 4, text: 'Hello sweety!'},\r\n        {id: 5, text: '*picture*'}\r\n    ]\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, text: action.newMessageBody}],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageActionCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default messagesReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    usersCountPerPage: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n};\r\n\r\nlet usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsers}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsers) => ({type: SET_TOTAL_USERS_COUNT, totalUsers});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport const requestUsers = (currentPage, pageUsersCount) => async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let response = await usersAPI.getUsers(currentPage, pageUsersCount)\r\n                dispatch(toggleIsFetching(false));\r\n                dispatch(setUsers(response.data.items));\r\n                dispatch(setTotalUsersCount(response.data.totalCount));\r\n    }\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n        let response = await usersAPI.follow(userId)\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n    }\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n        let response = await usersAPI.unfollow(userId)\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId))\r\n                }\r\n    }\r\n\r\n\r\n\r\nexport default usersReducer;"],"sourceRoot":""}