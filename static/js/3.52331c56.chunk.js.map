{"version":3,"sources":["img/UserPhoto.jpg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/ProfileWall/WallPost/WallPost.jsx","components/Profile/ProfileWall/ProfileWall.jsx","components/Profile/ProfileWall/ProfileWallContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","onClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","ProfileInfo","userProfile","fullName","src","photos","large","profilePhoto","alt","isOwner","target","files","savePhoto","type","name","id","htmlFor","userProfileStatus","WallPost","small","text","likesCount","maxLength150","maxLength","minLength2","minLength","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","textareaField","validate","required","label","ProfileWall","postsComponent","postsData","map","post","postData","addPost","newPost","ProfileWallContainer","connect","state","profilePage","newPostText","dispatch","Profile","Loader","ProfileContainer","userId","this","match","params","history","getUserProfile","getUserProfileStatus","refreshProfile","prevProps","prevState","updateUserProfileStatus","saveProfilePhoto","React","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.52331c56.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/UserPhoto.c5accf4f.jpg\";","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import \"./ProfileInfo.scss\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"ProfileStatus\">\r\n            {!editMode &&\r\n            <div className=\"ProfileStatus-Input\" onClick={activateEditMode}>\r\n                <p>{props.status || 'Status is empty'}</p>\r\n            </div>}\r\n\r\n            {editMode &&\r\n            <div className=\"ProfileStatus-Input_editMode\">\r\n                <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true}\r\n                       value={status}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import './ProfileInfo.scss'\r\nimport profilePhoto from \"../../../img/UserPhoto.jpg\"\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    const profilePhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"ProfileInfo\">\r\n            <div className=\"ProfileName\">\r\n                <h1>{props.userProfile.fullName}</h1>\r\n            </div>\r\n\r\n            <div className=\"ProfileImage\">\r\n                <div className=\"ProfileImage-Photo\">\r\n                    <img src={props.userProfile.photos.large || profilePhoto} alt=\"Profile\"/>\r\n                </div>\r\n                <div className=\"ProfileImage-Choose\">\r\n                    {props.isOwner &&\r\n                    <input onChange={profilePhotoSelected}\r\n                           type=\"file\"\r\n                           name=\"file\"\r\n                           id=\"file\"/>}\r\n                    <label htmlFor=\"file\">Choose image</label>\r\n                </div>\r\n            </div>\r\n            <ProfileStatus status={props.userProfileStatus} updateStatus={props.updateStatus}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import './WallPost.scss'\r\nimport profilePhoto from \"../../../../img/UserPhoto.jpg\"\r\nimport Loader from \"../../../common/Loader/Loader\";\r\n\r\nconst WallPost = (props) => {\r\n    return (\r\n        <div className=\"WallPost\">\r\n            <div className=\"WallPost-Photo\">\r\n                <img src={props.userProfile.photos.small || profilePhoto} alt=\"User Profile\"/>\r\n            </div>\r\n            <div>{props.text}</div>\r\n            <div>Likes: {props.likesCount}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WallPost","import './ProfileWall.scss'\r\nimport WallPost from \"./WallPost/WallPost\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, minLength, required, textareaField} from \"../../common/Validator/Validator\";\r\n\r\n\r\nconst ProfileWall = (props) => {\r\n    let postsComponent = props.postsData.map(post => <WallPost userProfile={props.userProfile} text={post.text}\r\n                                                               likesCount={post.likesCount}\r\n                                                               key={post.id}/>)\r\n\r\n    let addPost = (postData) => {\r\n        props.addPost(postData.newPost);\r\n    }\r\n\r\n    return (\r\n        <div className=\"ProfileWall\">\r\n            <AddPostReduxForm onSubmit={addPost}/>\r\n            <div className=\"WallPostSection\">\r\n                {postsComponent}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength150 = maxLength(150);\r\nconst minLength2 = minLength(2);\r\n\r\nconst AddPost = (props) => {\r\n    return (\r\n        <form className=\"AddPost\" onSubmit={props.handleSubmit}>\r\n            <div className=\"AddPost-Textarea\">\r\n                <Field component={textareaField}\r\n                       validate={[required, maxLength150, minLength2]}\r\n                       name=\"newPost\"\r\n                       label=\"New post\"\r\n                       type=\"text\"\r\n                />\r\n            </div>\r\n            <div className=\"AddPost-Button\">\r\n                <button type=\"submit\">Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({ form: 'addPost' })(AddPost)\r\n\r\nexport default ProfileWall;","import {addPost} from \"../../../redux/profileReducer\";\r\nimport ProfileWall from \"./ProfileWall\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst MapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText,\r\n        userProfile: state.profilePage.userProfile\r\n    }\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch(addPost(newPost));\r\n        }\r\n    }\r\n};\r\n\r\nconst ProfileWallContainer = connect(MapStateToProps, MapDispatchToProps)(ProfileWall);\r\n\r\n\r\nexport default ProfileWallContainer;","import './Profile.scss'\r\nimport '../../App.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport ProfileWallContainer from \"./ProfileWall/ProfileWallContainer\";\r\nimport Loader from \"../common/Loader/Loader\";\r\n\r\nconst Profile = (props) => {\r\n    if (!props.userProfile) {\r\n        return <Loader/>\r\n    }\r\n    return (\r\n        <div className=\"Profile BackgroundColor\">\r\n            <ProfileInfo {...props}\r\n                         isOwner={props.isOwner}\r\n                         updateStatus={props.updateStatus}/>\r\n            <ProfileWallContainer {...props}/>\r\n        </div>\r\n    );\r\n}\r\n// userProfile={props.userProfile}\r\nexport default Profile;","import './Profile.scss'\r\nimport * as React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUserProfile,\r\n    getUserProfileStatus,\r\n    saveProfilePhoto,\r\n    updateUserProfileStatus\r\n} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = +this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/Login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserProfileStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        updateStatus={this.props.updateUserProfileStatus}\r\n                        savePhoto={this.props.saveProfilePhoto}/>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userProfile: state.profilePage.userProfile,\r\n        userProfileStatus: state.profilePage.userProfileStatus,\r\n        userId: state.auth.id,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserProfileStatus, updateUserProfileStatus, saveProfilePhoto }),\r\n    withRouter\r\n)\r\n(ProfileContainer)\r\n\r\n"],"sourceRoot":""}