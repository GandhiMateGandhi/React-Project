{"version":3,"sources":["api/api.js","redux/authReducer.js","redux/appReducer.js","redux/reduxStore.js","components/Main/Main.jsx","components/Sidebar/SideItem/SideItem.jsx","components/Sidebar/Sidebar.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Login/Login.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","hoc/withSuspense.js","App.js","index.js","components/common/Validator/Validator.jsx","components/common/Loader/Loader.jsx","redux/profileReducer.js","redux/messagesReducer.js","redux/usersReducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageUsersCount","get","follow","userId","post","unfollow","delete","profileAPI","getProfile","getProfileStatus","updateProfileStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","SET_USER_DATA","initialState","id","isAuth","setAuthUserData","type","payload","getAuthUserData","dispatch","a","response","data","resultCode","authLogout","authReducer","state","action","INITIALIZED","initialized","appReducer","store","createStore","require","combineReducers","profilePage","profileReducer","messagesPage","messagesReducer","usersPage","usersReducer","auth","app","form","formReducer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunkMiddleware","Main","className","SideItem","item","to","Sidebar","News","props","Settings","maxLength25","maxLength","minLength2","minLength","LoginReduxForm","reduxForm","handleSubmit","pristine","submitting","onSubmit","Field","component","inputField","validate","required","name","label","htmlFor","disabled","error","connect","authLogin","errorMessage","messages","length","stopSubmit","_error","formData","Header","onClick","HeaderContainer","this","React","withSuspense","Component","fallback","Loader","UsersContainer","ProfileContainer","MessagesContainer","App","initializeApp","path","render","promise","Promise","all","then","ReactDOM","StrictMode","document","getElementById","value","undefined","max","min","textareaField","input","meta","touched","warning","placeholder","ADD_POST","SET_USER_PROFILE","SET_USER_PROFILE_STATUS","postsData","text","likesCount","userProfile","userProfileStatus","addPost","newPostText","setUserProfileStatus","getUserProfile","getUserProfileStatus","updateUserProfileStatus","SEND_MESSAGE","usersData","messagesData","sendMessageActionCreator","newMessageBody","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","usersCountPerPage","totalUsersCount","isFetching","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","requestUsers","items","totalUsers","totalCount","map","user","followed"],"mappings":"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","file":"static/js/main.eeec1879.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"70c3d7bd-2946-4984-86de-f95d71c9a231\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageUsersCount = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageUsersCount}`)\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/` + userId)\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/` + userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getProfileStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateProfileStatus(status) {\r\n        return instance.put(`profile/status/`, { status: status })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe })\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n        email: null,\r\n        id: null,\r\n        login: null,\r\n        isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = ( id, email, login, isAuth ) => ({ type: SET_USER_DATA, payload: { id, email, login, isAuth } });\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n           let response = await authAPI.me();\r\n                if (response.data.resultCode === 0) {\r\n                    let { id, login, email } = response.data.data\r\n                    dispatch(setAuthUserData(id, email, login, true));\r\n                }\r\n    }\r\n\r\nexport const authLogin = (email, password, rememberMe) => async (dispatch) => {\r\n      let response = await authAPI.login(email, password, rememberMe);\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(getAuthUserData());\r\n                } else {\r\n                    let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : \"Incorrect login data\";\r\n                    dispatch(stopSubmit(\"login\", { _error: errorMessage }))\r\n                }\r\n    }\r\n\r\nexport const authLogout = () => async (dispatch) => {\r\n        let response = await authAPI.logout()\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setAuthUserData(null, null, null, false));\r\n                }\r\n    }\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIALIZED = 'INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializationComplete = () => ({ type: INITIALIZED });\r\n\r\nexport const initializeApp = () =>\r\n    (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializationComplete())\r\n            });\r\n\r\n    }\r\n\r\nexport default appReducer;","import { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {applyMiddleware, combineReducers, compose} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport appReducer from \"./appReducer\";\r\nconst {createStore} = require(\"redux\");\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import './Main.scss'\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div className=\"Main\">\r\n        <h1>Main content</h1>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import './SideItem.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst SideItem = ( {item} ) => {\r\n    return (\r\n        <div className=\"SideItem\">\r\n            <NavLink to={item}>{item}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideItem;","import NavItem from './SideItem/SideItem'\r\nimport './Sidebar.scss'\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <nav className=\"Sidebar\">\r\n            <NavItem item=\"Profile\" />\r\n            <NavItem item=\"Messages\" />\r\n            <NavItem item=\"Main\" />\r\n            <NavItem item=\"Users\" />\r\n            <NavItem item=\"News\" />\r\n            <NavItem item=\"Settings\" />\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import './News.scss'\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div className=\"News\">\r\n            <h1>News content</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import './Settings.scss'\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div className=\"Settings\">\r\n            <h1>Settings content</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import './Login.scss';\r\nimport '../common/Validator/Validator.scss'\r\nimport React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from \"react-redux\";\r\nimport {authLogin, authLogout} from \"../../redux/authReducer\";\r\nimport {inputField, maxLength, minLength, required} from \"../common/Validator/Validator\";\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst maxLength25 = maxLength(25);\r\nconst minLength2 = minLength(2);\r\n\r\nconst LoginForm = (props) => {\r\n    const { handleSubmit, pristine, submitting } = props;\r\n    return (\r\n        <form className=\"LoginForm\" onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field component={inputField}\r\n                       validate={[required, maxLength25, minLength2]}\r\n                       name=\"email\"\r\n                       label=\"Email\"\r\n                       type=\"text\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field component={inputField}\r\n                       validate={[required, maxLength25, minLength2]}\r\n                       name=\"password\"\r\n                       label=\"Password\"\r\n                       type=\"password\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field component={inputField}\r\n                       name=\"rememberMe\"\r\n                       label=\"Remember me\"\r\n                       type=\"checkbox\"\r\n                />\r\n                <label htmlFor=\"rememberMe\">Remember me</label>\r\n            </div>\r\n            <div className=\"Error Error_input\">\r\n                <button type=\"submit\" disabled={pristine || submitting}>Login</button>\r\n                {props.error && <span>{props.error}</span>}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.authLogin(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/Profile\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { authLogin, authLogout })(Login);","import './Header.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"Header\">\r\n            <div className=\"HeaderLogin\">\r\n                {\r\n                    props.isAuth ?\r\n                        <div className=\"HeaderLogout\">\r\n                            <NavLink to={'/Profile'}>{props.login}</NavLink>\r\n                            <button onClick={props.authLogout}>Log out</button>\r\n                        </div> :\r\n                        <NavLink to={'/Login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import * as React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authLogout} from \"../../redux/authReducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { authLogout })(HeaderContainer);","import React, { Suspense } from \"react\";\r\nimport Loader from \"../components/common/Loader/Loader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Loader />} >\r\n            <Component {...props} />\r\n        </Suspense>\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport './Wrapper.scss'\r\nimport './App.css'\r\nimport Main from './components/Main/Main';\r\nimport Sidebar from './components/Sidebar/Sidebar';\r\nimport News from \"./components/News/News\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {Route} from \"react-router-dom\"\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Loader from \"./components/common/Loader/Loader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\r\nconst MessagesContainer = React.lazy(() => import (\"./components/Messages/MessagesContainer\"));\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Loader />\r\n        }\r\n        return (\r\n            <div className=\"Wrapper\">\r\n                <HeaderContainer/>\r\n                <Sidebar/>\r\n                <div className=\"Content\">\r\n                    <Route path='/Main' render={() => <Main/>}/>\r\n                    <Route path='/Messages' render={withSuspense(MessagesContainer)}/>\r\n                    <Route path='/News' render={() => <News/>}/>\r\n                    <Route path='/Users' render={withSuspense(UsersContainer)}/>\r\n                    <Route path='/Settings' render={() => <Settings/>}/>\r\n                    <Route path='/Login' render={() => <Login/>}/>\r\n                    <Route path='/Profile/:userId?' render={withSuspense(ProfileContainer)}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n}\r\n)\r\nexport default connect(mapStateToProps, { initializeApp })(App);\r\n","import './index.css';\r\nimport store from \"./redux/reduxStore\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                    <App />\r\n                </Provider>\r\n            </HashRouter>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n","import React from 'react'\r\nimport './Validator.scss'\r\n\r\nexport const required = value => (value ? undefined : 'Required');\r\nexport const maxLength = max => value =>\r\n    value && value.length > max ? `Must be maximum ${max} characters` : undefined;\r\nexport const minLength = min => value =>\r\n    value && value.length < min ? `Must me minimum ${min} characters` : undefined;\r\n\r\nexport const textareaField = ({\r\n                                  input,\r\n                                  label,\r\n                                  type,\r\n                                  meta: { touched, error, warning }\r\n                              }) => (\r\n    <div className=\"Error Error_textarea\">\r\n        <textarea {...input} placeholder={label} type={type}/>\r\n        {touched &&\r\n        ((error && <span>{error}</span>) ||\r\n            (warning && <span>{warning}</span>))}\r\n    </div>\r\n)\r\n\r\nexport const inputField = ({\r\n                               input,\r\n                               label,\r\n                               type,\r\n                               meta: { touched, error, warning }\r\n                           }) => (\r\n    <div className=\"Error Error_input\">\r\n        <input {...input} placeholder={label} type={type}/>\r\n        {touched &&\r\n        ((error && <span>{error}</span>) ||\r\n            (warning && <span>{warning}</span>))}\r\n    </div>\r\n)\r\n\r\n","import './Loader.scss';\r\n\r\nlet Loader = () => {\r\n    return (\r\n        <div className=\"lds-ellipsis\">\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_PROFILE_STATUS = 'SET_USER_PROFILE_STATUS';\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {id: 1, text: 'How\\'re you?', likesCount: 3},\r\n        {id: 2, text: 'Let\\'s do party tonight!', likesCount: 1},\r\n        {id: 3, text: '*post*', likesCount: 13},\r\n        {id: 4, text: 'Hello sweety!', likesCount: 6},\r\n        {id: 5, text: '*picture*', likesCount: 22}\r\n    ],\r\n    userProfile: null,\r\n    userProfileStatus: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, { id: 6, text: action.newPostText, likesCount: 0 }],\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {...state, userProfile: action.userProfile}\r\n        }\r\n\r\n        case SET_USER_PROFILE_STATUS: {\r\n            return {...state, userProfileStatus: action.status}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (userProfile) => ({type: SET_USER_PROFILE, userProfile})\r\nexport const setUserProfileStatus = (status) => ({type: SET_USER_PROFILE_STATUS, status})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n        let response = await profileAPI.getProfile(userId)\r\n                dispatch(setUserProfile(response.data));\r\n    }\r\n\r\nexport const getUserProfileStatus = (userId) => async (dispatch) => {\r\n       let response = await profileAPI.getProfileStatus(userId)\r\n                dispatch(setUserProfileStatus(response.data));\r\n    }\r\n\r\nexport const updateUserProfileStatus = (status) => async (dispatch) => {\r\n       let response = await profileAPI.updateProfileStatus(status)\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setUserProfileStatus(status));\r\n                }\r\n    }\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    usersData: [\r\n        {id: 1, name: 'Kamilla'},\r\n        {id: 2, name: 'Vildan'},\r\n        {id: 3, name: 'Rustem'},\r\n        {id: 4, name: 'Elvira'},\r\n        {id: 5, name: 'Cafe'}\r\n    ],\r\n    messagesData: [\r\n        {id: 1, text: 'How\\'re you'},\r\n        {id: 2, text: 'Let\\'s do party tonight!'},\r\n        {id: 3, text: '*post*'},\r\n        {id: 4, text: 'Hello sweety!'},\r\n        {id: 5, text: '*picture*'}\r\n    ]\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, text: action.newMessageBody}],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageActionCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default messagesReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    usersCountPerPage: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n};\r\n\r\nlet usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsers}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsers) => ({type: SET_TOTAL_USERS_COUNT, totalUsers});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport const requestUsers = (currentPage, pageUsersCount) => async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let response = await usersAPI.getUsers(currentPage, pageUsersCount)\r\n                dispatch(toggleIsFetching(false));\r\n                dispatch(setUsers(response.data.items));\r\n                dispatch(setTotalUsersCount(response.data.totalCount));\r\n    }\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n        let response = await usersAPI.follow(userId)\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n    }\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n        let response = await usersAPI.unfollow(userId)\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId))\r\n                }\r\n    }\r\n\r\n\r\n\r\nexport default usersReducer;"],"sourceRoot":""}