{"version":3,"sources":["img/UserPhoto.jpg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/ProfileWall/WallPost/WallPost.jsx","components/Profile/ProfileWall/ProfileWall.jsx","components/Profile/ProfileWall/ProfileWallContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","onClick","ProfileInfo","userProfile","fullName","src","photos","large","profilePhoto","alt","userProfileStatus","WallPost","small","text","likesCount","maxLength150","maxLength","minLength2","minLength","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","textareaField","validate","required","name","label","type","ProfileWall","console","log","postsComponent","postsData","map","post","id","postData","addPost","newPost","ProfileWallContainer","connect","state","profilePage","newPostText","dispatch","Profile","Loader","ProfileContainer","userId","this","match","params","getUserProfile","getUserProfileStatus","updateUserProfileStatus","React","compose","withRouter"],"mappings":"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","file":"static/js/3.78a21c75.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/UserPhoto.c5accf4f.jpg\";","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import \"./ProfileInfo.scss\";\r\nimport React, {useState, useEffect} from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"ProfileStatus\">\r\n            {editMode ? <div>\r\n                    <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true}\r\n                           value={status}/>\r\n                </div> :\r\n                <div className=\"ProfileStatus-Input\" onClick={activateEditMode}>\r\n                    <p>{props.status || 'Status is empty'}</p>\r\n                </div>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import './ProfileInfo.scss'\r\nimport Loader from \"../../common/Loader/Loader\";\r\nimport profilePhoto from \"../../../img/UserPhoto.jpg\"\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    // if (!props.userProfile) {\r\n    //     return <Loader/>\r\n    // }\r\n    return (\r\n        <div className=\"ProfileInfo\">\r\n            <h2>{props.userProfile.fullName}</h2>\r\n            <div className=\"ProfileImage\">\r\n                <img src={props.userProfile.photos.large || profilePhoto} alt=\"Profile\"/>\r\n            </div>\r\n            <ProfileStatus status={props.userProfileStatus} updateStatus={props.updateStatus}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import './WallPost.scss'\r\nimport profilePhoto from \"../../../../img/UserPhoto.jpg\"\r\nimport Loader from \"../../../common/Loader/Loader\";\r\n\r\nconst WallPost = (props) => {\r\n    // if (!props.userProfile) {\r\n    //     return <Loader/>\r\n    // }\r\n    return (\r\n        <div className=\"WallPost\">\r\n            <div className=\"WallPost-Photo\">\r\n                <img src={props.userProfile.photos.small || profilePhoto} alt=\"User Profile\"/>\r\n            </div>\r\n            <div>{props.text}</div>\r\n            <div>Likes: {props.likesCount}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WallPost","import './ProfileWall.scss'\r\nimport WallPost from \"./WallPost/WallPost\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, minLength, required, textareaField} from \"../../common/Validator/Validator\";\r\n\r\n\r\nconst ProfileWall = (props) => {\r\n    console.log('Render')\r\n\r\n    let postsComponent = props.postsData.map(post => <WallPost userProfile={props.userProfile} text={post.text} likesCount={post.likesCount}\r\n                                                               key={post.id}/>)\r\n\r\n    let addPost = (postData) => {\r\n        props.addPost(postData.newPost);\r\n    }\r\n\r\n    return (\r\n        <div className=\"ProfileWall\">\r\n            {postsComponent}\r\n            <AddPostReduxForm onSubmit={addPost}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength150 = maxLength(150);\r\nconst minLength2 = minLength(2);\r\n\r\nconst AddPost = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={textareaField}\r\n                       validate={[required, maxLength150, minLength2]}\r\n                       name=\"newPost\"\r\n                       label=\"New post\"\r\n                       type=\"text\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({ form: 'addPost' })(AddPost)\r\n\r\nexport default ProfileWall;","import {addPost} from \"../../../redux/profileReducer\";\r\nimport ProfileWall from \"./ProfileWall\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst MapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText,\r\n        userProfile: state.profilePage.userProfile\r\n    }\r\n};\r\n\r\nconst MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch(addPost(newPost));\r\n        }\r\n    }\r\n};\r\n\r\nconst ProfileWallContainer = connect(MapStateToProps, MapDispatchToProps)(ProfileWall);\r\n\r\n\r\nexport default ProfileWallContainer;","import './Profile.scss'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport ProfileWallContainer from \"./ProfileWall/ProfileWallContainer\";\r\nimport Loader from \"../common/Loader/Loader\";\r\n\r\nconst Profile = (props) => {\r\n    if (!props.userProfile) {\r\n        return <Loader/>\r\n    }\r\n    return (\r\n        <div className=\"Profile\">\r\n            <ProfileInfo {...props} updateStatus={props.updateStatus}/>\r\n            <ProfileWallContainer {...props}/>\r\n        </div>\r\n    );\r\n}\r\n// userProfile={props.userProfile}\r\nexport default Profile;","import './Profile.scss'\r\nimport * as React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserProfileStatus, updateUserProfileStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = 13200\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserProfileStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} updateStatus={this.props.updateUserProfileStatus}/>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userProfile: state.profilePage.userProfile,\r\n        userProfileStatus: state.profilePage.userProfileStatus,\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserProfileStatus, updateUserProfileStatus}),\r\n    withRouter\r\n)\r\n(ProfileContainer)\r\n\r\n"],"sourceRoot":""}