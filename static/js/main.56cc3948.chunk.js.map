{"version":3,"sources":["redux/usersReducer.js","api/api.js","components/common/Validator/Validator.jsx","redux/authReducer.js","redux/appReducer.js","redux/reduxStore.js","components/Main/Main.jsx","components/Sidebar/SideItem/SideItem.jsx","icons/user-solid.svg","components/Sidebar/Sidebar.jsx","components/common/HeartLoader/HeartLoader.jsx","components/common/WorkInProgress/WorkInProgress.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Login/Login.jsx","icons/logo.svg","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","hoc/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.jsx","redux/profileReducer.js","redux/messagesReducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","initialState","users","usersCountPerPage","totalUsersCount","currentPage","isFetching","followSuccess","userId","type","unfollowSuccess","setCurrentPage","toggleIsFetching","requestUsers","pageUsersCount","dispatch","a","usersAPI","getUsers","response","data","items","totalUsers","totalCount","follow","resultCode","unfollow","usersReducer","state","action","map","user","id","followed","instance","axios","withCredentials","baseURL","headers","get","post","delete","profileAPI","getProfile","getProfileStatus","updateProfileStatus","status","put","saveProfilePhoto","profilePhoto","formData","FormData","append","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","required","value","undefined","maxLength","max","length","minLength","min","textareaField","input","label","meta","touched","error","warning","className","placeholder","inputField","SET_USER_DATA","SET_CAPTCHA_URL","isAuth","captchaUrl","setAuthUserData","payload","setCaptchaUrl","getAuthUserData","authLogout","url","authReducer","INITIALIZED","initialized","appReducer","store","createStore","require","combineReducers","profilePage","profileReducer","messagesPage","messagesReducer","usersPage","auth","app","form","formReducer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunkMiddleware","Main","SideItem","item","IconPropClass","to","Sidebar","HeartLoader","WorkInProgress","News","Settings","props","maxLength25","minLength2","LoginReduxForm","reduxForm","handleSubmit","pristine","submitting","onSubmit","Field","component","validate","name","htmlFor","src","alt","disabled","connect","authLogin","errorMessage","messages","stopSubmit","_error","Header","HeaderLogo","onClick","HeaderContainer","this","React","withSuspense","Component","fallback","Preloader","UsersContainer","ProfileContainer","MessagesContainer","App","initializeApp","path","render","from","promise","Promise","all","then","ReactDOM","StrictMode","document","getElementById","ADD_POST","SET_USER_PROFILE","SET_USER_PROFILE_STATUS","SET_PROFILE_PHOTO","postsData","text","likesCount","userProfile","userProfileStatus","addPost","newPostText","setUserProfileStatus","saveProfilePhotoSuccess","photos","getUserProfile","getUserProfileStatus","updateUserProfileStatus","console","log","SEND_MESSAGE","usersData","messagesData","sendMessageActionCreator","newMessageBody"],"mappings":"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","file":"static/js/main.56cc3948.chunk.js","sourcesContent":["import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    usersCountPerPage: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n};\r\n\r\nlet usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsers}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsers) => ({type: SET_TOTAL_USERS_COUNT, totalUsers});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport const requestUsers = (currentPage, pageUsersCount) => async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let response = await usersAPI.getUsers(currentPage, pageUsersCount)\r\n                dispatch(toggleIsFetching(false));\r\n                dispatch(setUsers(response.data.items));\r\n                dispatch(setTotalUsersCount(response.data.totalCount));\r\n    }\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n        let response = await usersAPI.follow(userId)\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n    }\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n        let response = await usersAPI.unfollow(userId)\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId))\r\n                }\r\n    }\r\n\r\n\r\n\r\nexport default usersReducer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"22f29d98-87b4-4898-a75f-c433c157801d\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageUsersCount = 15) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageUsersCount}`)\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/` + userId)\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/` + userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getProfileStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateProfileStatus(status) {\r\n        return instance.put(`profile/status/`, { status })\r\n    },\r\n    saveProfilePhoto(profilePhoto) {\r\n        const formData = new FormData();\r\n        formData.append('image', profilePhoto)\r\n        return instance.put(`profile/photo`, formData)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n\r\n    login(email, password, rememberMe = false, captcha) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha })\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl () {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport './Validator.scss'\r\n\r\nexport const required = value => (value ? undefined : 'Required');\r\nexport const maxLength = max => value =>\r\n    value && value.length > max ? `Must be maximum ${max} characters` : undefined;\r\nexport const minLength = min => value =>\r\n    value && value.length < min ? `Must me minimum ${min} characters` : undefined;\r\n\r\nexport const textareaField = ({\r\n                                  input,\r\n                                  label,\r\n                                  type,\r\n                                  meta: { touched, error, warning }\r\n                              }) => (\r\n    <div className=\"Error Error_textarea\">\r\n        <textarea {...input} placeholder={label} type={type}/>\r\n        {touched &&\r\n        ((error && <span>{error}</span>) ||\r\n            (warning && <span>{warning}</span>))}\r\n    </div>\r\n)\r\n\r\nexport const inputField = ({\r\n                               input,\r\n                               label,\r\n                               type,\r\n                               meta: { touched, error, warning }\r\n                           }) => (\r\n    <div className=\"Error Error_input\">\r\n        <input {...input} placeholder={label} type={type}/>\r\n        {touched &&\r\n        ((error && <span>{error}</span>) ||\r\n            (warning && <span>{warning}</span>))}\r\n    </div>\r\n)\r\n\r\n","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst SET_CAPTCHA_URL = 'SET_CAPTCHA_URL'\r\n\r\n\r\nlet initialState = {\r\n    email: null,\r\n    id: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case SET_CAPTCHA_URL: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: { id, email, login, isAuth }\r\n});\r\n\r\nexport const setCaptchaUrl = (captchaUrl) => ({ type: SET_CAPTCHA_URL, payload: { captchaUrl } });\r\n\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, login, email } = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const authLogin = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : \"Incorrect login data\";\r\n        dispatch(stopSubmit(\"login\", { _error: errorMessage }))\r\n    }\r\n}\r\n\r\nexport const authLogout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    let response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url;\r\n        dispatch(setCaptchaUrl(captchaUrl));\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIALIZED = 'INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializationComplete = () => ({ type: INITIALIZED });\r\n\r\nexport const initializeApp = () =>\r\n    (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializationComplete())\r\n            });\r\n\r\n    }\r\n\r\nexport default appReducer;","import { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {applyMiddleware, combineReducers, compose} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport appReducer from \"./appReducer\";\r\nconst {createStore} = require(\"redux\");\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import './Main.scss'\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div className=\"Main\">\r\n        <h1>Main content</h1>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import './SideItem.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n// import {ReactComponent as ProfileIcon} from '../../../icons/user-solid.svg'\r\n\r\nconst SideItem = ( {item, IconPropClass} ) => {\r\n    return (\r\n        <div className={`SideItem ${IconPropClass}`}>\r\n            <NavLink to={item}>\r\n                {/*<img src={`./${IconPropClass}.svg`} />*/}\r\n                {item}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideItem;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\"\n});\n\nfunction SvgUserSolid(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"user\",\n    className: \"svg-inline--fa fa-user fa-w-14\",\n    role: \"img\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 448 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUserSolid);\nexport default __webpack_public_path__ + \"static/media/user-solid.0a42f5da.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport NavItem from './SideItem/SideItem'\r\nimport './Sidebar.scss'\r\nimport '../../App.css'\r\nimport {ReactComponent as ProfileIcon} from '../../icons/user-solid.svg'\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <nav className=\"Sidebar BackgroundColor\">\r\n            {/*<ProfileIcon />*/}\r\n            <NavItem IconPropClass=\"ProfileIcon\" item=\"Profile\" />\r\n            <NavItem IconPropClass=\"UsersIcon\" item=\"Users\" />\r\n            <NavItem IconPropClass=\"MessagesIcon\" item=\"Messages\" />\r\n            <NavItem IconPropClass=\"NewsIcon\" item=\"News\" />\r\n            <NavItem IconPropClass=\"SettingsIcon\" item=\"Settings\" />\r\n            {/*<NavItem item=\"Main\" />*/}\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import './HeartLoader.scss'\r\n\r\nconst HeartLoader = () => {\r\n    return (\r\n        <div className=\"lds-heart\">\r\n            <div/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeartLoader;","import Preloader from \"../Preloader/Preloader\";\r\nimport './WorkInProgress.scss'\r\nimport HeartLoader from \"../HeartLoader/HeartLoader\";\r\n\r\nexport const WorkInProgress = () => {\r\n    return (\r\n        <div className=\"WorkInProgress\">\r\n            <h1>Work in progress :)</h1>\r\n            <HeartLoader />\r\n            {/*<Preloader />*/}\r\n        </div>\r\n    )\r\n}","import './News.scss'\r\nimport {WorkInProgress} from \"../common/WorkInProgress/WorkInProgress\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className=\"News\">\r\n            <WorkInProgress />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import './Settings.scss'\r\nimport {WorkInProgress} from \"../common/WorkInProgress/WorkInProgress\";\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div className=\"Settings\">\r\n            <WorkInProgress />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import './Login.scss';\r\nimport '../common/Validator/Validator.scss'\r\nimport React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {connect} from \"react-redux\";\r\nimport {authLogin, authLogout, getCaptchaUrl} from \"../../redux/authReducer\";\r\nimport {inputField, maxLength, minLength, required} from \"../common/Validator/Validator\";\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst maxLength25 = maxLength(25);\r\nconst minLength2 = minLength(2);\r\n\r\nconst LoginForm = (props) => {\r\n    const { handleSubmit, pristine, submitting, captchaUrl } = props;\r\n    return (\r\n        <form className=\"LoginForm\" onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field component={inputField}\r\n                       validate={[required, maxLength25, minLength2]}\r\n                       name=\"email\"\r\n                       label=\"Email\"\r\n                       type=\"text\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field component={inputField}\r\n                       validate={[required, maxLength25, minLength2]}\r\n                       name=\"password\"\r\n                       label=\"Password\"\r\n                       type=\"password\"\r\n                />\r\n            </div>\r\n            <div className=\"RememberMeForm\">\r\n                <Field component={inputField}\r\n                       name=\"rememberMe\"\r\n                       label=\"Remember me\"\r\n                       type=\"checkbox\"\r\n                />\r\n                <label htmlFor=\"rememberMe\">Remember me</label>\r\n            </div>\r\n            {captchaUrl && <img src={captchaUrl} alt=\"Captcha\"/>}\r\n            {captchaUrl &&\r\n            <div>\r\n                <Field component={inputField}\r\n                       validate={[required, maxLength25, minLength2]}\r\n                       name=\"captcha\"\r\n                       label=\"Captcha\"\r\n                       type=\"text\"\r\n                />\r\n            </div>}\r\n            <div className=\"Error Error_input\">\r\n                <button type=\"submit\" disabled={pristine || submitting}>Login</button>\r\n                {props.error && <span>{props.error}</span>}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.authLogin(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/Profile\"/>\r\n    }\r\n    return (\r\n        <div className=\"Login\">\r\n            <LoginReduxForm captchaUrl={props.captchaUrl} onSubmit={onSubmit}/>\r\n            <div className=\"Login-TestAccount\">\r\n                <p><b>Данные для входа в тестовый аккаунт: </b> <br/>\r\n                    Email: free@samuraijs.com <br/>\r\n                    Password: free</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { authLogin, authLogout, getCaptchaUrl })(Login);","export default __webpack_public_path__ + \"static/media/logo.06b89950.svg\";","import './Header.scss'\r\nimport '../../App.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport HeaderLogo from '../../icons/logo.svg'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"Header BackgroundColor\">\r\n            <div className=\"HeaderWrap\">\r\n                <div className=\"HeaderLogo\">\r\n                    <img src={HeaderLogo} alt=\"Logo\"/>\r\n                    <span>React Project</span>\r\n                </div>\r\n                <div className=\"HeaderLogin\">\r\n                    {props.isAuth ?\r\n                        <div className=\"HeaderLogout\">\r\n                            <NavLink to={'/Profile'}>{props.login}</NavLink>\r\n                            <button onClick={props.authLogout}>Log out</button>\r\n                        </div> :\r\n                        <NavLink to={'/Login'}>Login</NavLink>}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import * as React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authLogout} from \"../../redux/authReducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { authLogout })(HeaderContainer);","import React, { Suspense } from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader />} >\r\n            <Component {...props} />\r\n        </Suspense>\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {Component} from \"react\";\r\nimport './Wrapper.scss'\r\nimport './App.css'\r\nimport Main from './components/Main/Main';\r\nimport Sidebar from './components/Sidebar/Sidebar';\r\nimport News from \"./components/News/News\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {Route, Switch} from \"react-router-dom\"\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\r\nconst MessagesContainer = React.lazy(() => import (\"./components/Messages/MessagesContainer\"));\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"Wrapper\">\r\n                <HeaderContainer/>\r\n                <div className=\"PageContainer\">\r\n                    <Sidebar/>\r\n                    <div className=\"Content\">\r\n                        <Switch>\r\n                            <Route path='/Profile/:userId?' render={withSuspense(ProfileContainer)}/>\r\n                            <Route path='/Main' render={() => <Main/>}/>\r\n                            <Route path='/Messages' render={withSuspense(MessagesContainer)}/>\r\n                            <Route path='/News' render={() => <News/>}/>\r\n                            <Route path='/Users' render={withSuspense(UsersContainer)}/>\r\n                            <Route path='/Settings' render={() => <Settings/>}/>\r\n                            <Route path='/Login' render={() => <Login/>}/>\r\n                            <Redirect from=\"/\" to=\"/Profile\"/>\r\n                            <Route render={() => <Redirect from=\"/\" to=\"/Profile\"/>}/>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n        initialized: state.app.initialized\r\n    }\r\n)\r\nexport default connect(mapStateToProps, { initializeApp })(App);\r\n","import './index.css';\r\nimport store from \"./redux/reduxStore\";\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                    <App />\r\n                </Provider>\r\n            </HashRouter>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n","import './Preloader.scss';\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div className=\"Preloader\">\r\n            <div className=\"lds-ellipsis\">\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_PROFILE_STATUS = 'SET_USER_PROFILE_STATUS';\r\nconst SET_PROFILE_PHOTO = 'SET_PROFILE_PHOTO';\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        { id: 1, text: 'How\\'re you?', likesCount: 3 },\r\n        { id: 2, text: 'Let\\'s do party tonight!', likesCount: 1 },\r\n        { id: 3, text: '*post*', likesCount: 13 },\r\n        { id: 4, text: 'Hello sweety!', likesCount: 6 },\r\n        { id: 5, text: '*picture*', likesCount: 22 }\r\n    ],\r\n    userProfile: null,\r\n    userProfileStatus: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                postsData: [{ id: null, text: action.newPostText, likesCount: 0 }, ...state.postsData],\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, userProfile: action.userProfile }\r\n        }\r\n\r\n        case SET_USER_PROFILE_STATUS: {\r\n            return { ...state, userProfileStatus: action.status }\r\n        }\r\n\r\n        case SET_PROFILE_PHOTO: {\r\n            return { ...state, userProfile: { ...state.userProfile, photos: action.photos } }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostText) => ({ type: ADD_POST, newPostText });\r\nexport const setUserProfile = (userProfile) => ({ type: SET_USER_PROFILE, userProfile })\r\nexport const setUserProfileStatus = (status) => ({ type: SET_USER_PROFILE_STATUS, status })\r\nexport const saveProfilePhotoSuccess = (photos) => ({ type: SET_PROFILE_PHOTO, photos })\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getUserProfileStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfileStatus(userId)\r\n    dispatch(setUserProfileStatus(response.data));\r\n}\r\n\r\nexport const updateUserProfileStatus = (status) => async (dispatch) => {\r\n        let response = await profileAPI.updateProfileStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserProfileStatus(status));\r\n        } else {\r\n            console.log(`Error: ${response.data.messages[0]}`)\r\n        }\r\n\r\n}\r\n\r\nexport const saveProfilePhoto = (photos) => async (dispatch) => {\r\n    let response = await profileAPI.saveProfilePhoto(photos)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(saveProfilePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    usersData: [\r\n        {id: 1, name: 'Kamilla'},\r\n        {id: 2, name: 'Vildan'},\r\n        {id: 3, name: 'Rustem'},\r\n        {id: 4, name: 'Elvira'},\r\n        {id: 5, name: 'Cafe'}\r\n    ],\r\n    messagesData: [\r\n        {id: 1, text: 'How\\'re you'},\r\n        {id: 2, text: 'Let\\'s do party tonight!'},\r\n        {id: 3, text: '*post*'},\r\n        {id: 4, text: 'Hello sweety!'},\r\n        {id: 5, text: '*picture*'}\r\n    ]\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, text: action.newMessageBody}],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageActionCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default messagesReducer;"],"sourceRoot":""}